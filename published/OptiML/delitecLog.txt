Delite Application Being Staged:[MatMultCompiler$]
******Generating the program******
autotuneEnabled = false
[densematrix_object_apply] __arg0 
Sym(242)
[densematrix_object_apply] __arg1 
Sym(243)
[densematrix_object_apply] __arg0 
Sym(243)
[densematrix_object_apply] __arg1 
Sym(240)
[raghu] [genEmitNode] sym = List(Sym(1)), rhs = ArrayApply(Sym(0),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(1)), rhs = ArrayApply(Sym(0),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(108)), rhs = ReadFirstLine(Sym(1))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(108)), rhs = ReadFirstLine(Sym(1))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(109)), rhs = FString2_Trim(Sym(108))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(109)), rhs = FString2_Trim(Sym(108))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(110)), rhs = ArrayStringSplit(Sym(109),Const(\s+),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(110)), rhs = ArrayStringSplit(Sym(109),Const(\s+),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(111)), rhs = DeliteArrayLength(Sym(110))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(111)), rhs = DeliteArrayLength(Sym(110))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(116)), rhs = ObjectUnsafeImmutable(Sym(111))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(116)), rhs = ObjectUnsafeImmutable(Sym(111))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(2)), rhs = DeliteFileStreamNew(WrappedArray(Sym(1)))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(2)), rhs = DeliteFileStreamNew(WrappedArray(Sym(1)))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(3)), rhs = DeliteFileStreamNumThreads(Sym(2))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(3)), rhs = DeliteFileStreamNumThreads(Sym(2))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(591)), rhs = SimpleFatLoop(Sym(3),Sym(4),List(DeliteCollectElem(Block(Sym(66)),List(),ParSimpleBuffer,DeliteBufferElem(Sym(68),Sym(69),Sym(67),Sym(72),Sym(70),Sym(71),Block(Sym(511)),Block(Sym(513)),Block(Sym(515)),Block(Const(true)),Block(Sym(531)),Block(Sym(539)),Block(Sym(541)),Block(Sym(543)),Block(Sym(67))),Some(Block(Sym(590))),Some(Sym(63)),Some(Block(Sym(65))),Some(Sym(64)),0)))
[raghu] [genEmitNode] sym = List(Sym(591)), rhs = SimpleFatLoop(Sym(3),Sym(4),List(DeliteCollectElem(Block(Sym(66)),List(),ParSimpleBuffer,DeliteBufferElem(Sym(68),Sym(69),Sym(67),Sym(72),Sym(70),Sym(71),Block(Sym(511)),Block(Sym(513)),Block(Sym(515)),Block(Const(true)),Block(Sym(531)),Block(Sym(539)),Block(Sym(541)),Block(Sym(543)),Block(Sym(67))),Some(Block(Sym(590))),Some(Sym(63)),Some(Block(Sym(65))),Some(Sym(64)),0)))
[raghu] [genEmitNode] sym = List(Sym(592)), rhs = DeliteArrayLength(Sym(591))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(592)), rhs = DeliteArrayLength(Sym(591))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(593)), rhs = Primitive2_Forge_int_divide(Sym(592),Sym(111))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(593)), rhs = Primitive2_Forge_int_divide(Sym(592),Sym(111))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(594)), rhs = ObjectUnsafeImmutable(Sym(593))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(594)), rhs = ObjectUnsafeImmutable(Sym(593))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(595)), rhs = ObjectUnsafeImmutable(Sym(591))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(595)), rhs = ObjectUnsafeImmutable(Sym(591))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(596)), rhs = SimpleStruct(ClassTag(DenseMatrixDouble),List((_numRows,Sym(594)), (_numCols,Sym(116)), (_data,Sym(595))))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(596)), rhs = SimpleStruct(ClassTag(DenseMatrixDouble),List((_numRows,Sym(594)), (_numCols,Sym(116)), (_data,Sym(595))))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(597)), rhs = LAio3_ReadMatrix(Sym(1),<function1>,Const(\s+))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(597)), rhs = LAio3_ReadMatrix(Sym(1),<function1>,Const(\s+))
Def[Any]
CGenDeliteOps::emitNode::DeliteOpSingleTask = LAio3_ReadMatrix(Sym(1),<function1>,Const(\s+))
[raghu] [genEmitNode] sym = List(Sym(120)), rhs = ArrayApply(Sym(0),Const(1))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(120)), rhs = ArrayApply(Sym(0),Const(1))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(227)), rhs = ReadFirstLine(Sym(120))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(227)), rhs = ReadFirstLine(Sym(120))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(228)), rhs = FString2_Trim(Sym(227))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(228)), rhs = FString2_Trim(Sym(227))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(229)), rhs = ArrayStringSplit(Sym(228),Const(\s+),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(229)), rhs = ArrayStringSplit(Sym(228),Const(\s+),Const(0))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(230)), rhs = DeliteArrayLength(Sym(229))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(230)), rhs = DeliteArrayLength(Sym(229))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(235)), rhs = ObjectUnsafeImmutable(Sym(230))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(235)), rhs = ObjectUnsafeImmutable(Sym(230))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(121)), rhs = DeliteFileStreamNew(WrappedArray(Sym(120)))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(121)), rhs = DeliteFileStreamNew(WrappedArray(Sym(120)))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(122)), rhs = DeliteFileStreamNumThreads(Sym(121))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(122)), rhs = DeliteFileStreamNumThreads(Sym(121))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(681)), rhs = SimpleFatLoop(Sym(122),Sym(123),List(DeliteCollectElem(Block(Sym(185)),List(),ParSimpleBuffer,DeliteBufferElem(Sym(187),Sym(188),Sym(186),Sym(191),Sym(189),Sym(190),Block(Sym(601)),Block(Sym(603)),Block(Sym(605)),Block(Const(true)),Block(Sym(621)),Block(Sym(629)),Block(Sym(631)),Block(Sym(633)),Block(Sym(186))),Some(Block(Sym(680))),Some(Sym(182)),Some(Block(Sym(184))),Some(Sym(183)),0)))
[raghu] [genEmitNode] sym = List(Sym(681)), rhs = SimpleFatLoop(Sym(122),Sym(123),List(DeliteCollectElem(Block(Sym(185)),List(),ParSimpleBuffer,DeliteBufferElem(Sym(187),Sym(188),Sym(186),Sym(191),Sym(189),Sym(190),Block(Sym(601)),Block(Sym(603)),Block(Sym(605)),Block(Const(true)),Block(Sym(621)),Block(Sym(629)),Block(Sym(631)),Block(Sym(633)),Block(Sym(186))),Some(Block(Sym(680))),Some(Sym(182)),Some(Block(Sym(184))),Some(Sym(183)),0)))
[raghu] [genEmitNode] sym = List(Sym(682)), rhs = DeliteArrayLength(Sym(681))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(682)), rhs = DeliteArrayLength(Sym(681))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(683)), rhs = Primitive2_Forge_int_divide(Sym(682),Sym(230))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(683)), rhs = Primitive2_Forge_int_divide(Sym(682),Sym(230))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(684)), rhs = ObjectUnsafeImmutable(Sym(683))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(684)), rhs = ObjectUnsafeImmutable(Sym(683))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(685)), rhs = ObjectUnsafeImmutable(Sym(681))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(685)), rhs = ObjectUnsafeImmutable(Sym(681))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(686)), rhs = SimpleStruct(ClassTag(DenseMatrixDouble),List((_numRows,Sym(684)), (_numCols,Sym(235)), (_data,Sym(685))))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(686)), rhs = SimpleStruct(ClassTag(DenseMatrixDouble),List((_numRows,Sym(684)), (_numCols,Sym(235)), (_data,Sym(685))))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(687)), rhs = LAio3_ReadMatrix(Sym(120),<function1>,Const(\s+))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(687)), rhs = LAio3_ReadMatrix(Sym(120),<function1>,Const(\s+))
Def[Any]
CGenDeliteOps::emitNode::DeliteOpSingleTask = LAio3_ReadMatrix(Sym(120),<function1>,Const(\s+))
[raghu] [genEmitNode] sym = List(Sym(688)), rhs = FieldApply(Sym(597),_numRows)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(688)), rhs = FieldApply(Sym(597),_numRows)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(689)), rhs = FieldApply(Sym(687),_numCols)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(689)), rhs = FieldApply(Sym(687),_numCols)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(690)), rhs = IntTimes(Sym(688),Sym(689))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(690)), rhs = IntTimes(Sym(688),Sym(689))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(691)), rhs = FieldApply(Sym(597),_data)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(691)), rhs = FieldApply(Sym(597),_data)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(692)), rhs = FieldApply(Sym(597),_numCols)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(692)), rhs = FieldApply(Sym(597),_numCols)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(693)), rhs = FieldApply(Sym(687),_numRows)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(693)), rhs = FieldApply(Sym(687),_numRows)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(694)), rhs = IntTimes(Sym(689),Sym(693))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(694)), rhs = IntTimes(Sym(689),Sym(693))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(695)), rhs = FieldApply(Sym(687),_data)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(695)), rhs = FieldApply(Sym(687),_data)
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(832)), rhs = Densematrix_matmult(Sym(597),Sym(687))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(832)), rhs = Densematrix_matmult(Sym(597),Sym(687))
Def[Any]
CGenDeliteOps::emitNode::DeliteOpSingleTask = Densematrix_matmult(Sym(597),Sym(687))
[raghu] [genEmitNode] sym = List(Sym(833)), rhs = Ordering218___equal(Sym(832),Const(null))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(833)), rhs = Ordering218___equal(Sym(832),Const(null))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(921)), rhs = DenseMatrix5_MakeString(Sym(832))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(921)), rhs = DenseMatrix5_MakeString(Sym(832))
Def[Any]
CGenDeliteOps::emitNode::DeliteOpSingleTask = DenseMatrix5_MakeString(Sym(832))
[raghu] [genEmitNode] sym = List(Sym(922)), rhs = FString49_Pl(Sym(921),Const(
))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(922)), rhs = FString49_Pl(Sym(921),Const(
))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(923)), rhs = Misc1_Println(Sym(922))
Def[Any]
[raghu] [genEmitNode] sym = List(Sym(923)), rhs = Misc1_Println(Sym(922))
Def[Any]
==  Generating DEG file with options: {'profile': False, 'xdebug': False, 'no_multidimgpu': False, 'xnocache': False, 'jar_app': False, 'debug': False, 'opencl': False, 'no_fusion': False, 'build_dir': '/usr/local/google/home/raghuprabhakar/work/stanford/everythingDelite/published/OptiML', 'cluster': False, 'dump_exception': False, 'autotune': False, 'no_soa': False, 'cpp': True, 'no_blas': True, 'cuda': False, 'optimize': 0, 'verbose': False}
